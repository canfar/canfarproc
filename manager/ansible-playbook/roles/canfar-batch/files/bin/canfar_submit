#!/bin/bash
#
# User script for submitting jobs. A wrapper for canfar_translate_vm,
# canfar_job_validate and condor_submit. Normally a user should
# use canfar_translate_vm so that the job goes
# through the web service. This script avoids the web service and can
# submit jobs directly on the head node for testing purposes.

GROUP_NAME=canfar
TARGET_CLOUD=arbutus-canfar
EXEC_NAME=$(basename $0 .${0##*.})
EXEC_VERSION=0.4.0

msg() {
    echo -e " >> ${EXEC_NAME}: $1"
}

warn() {
    echo -e " ## WARNING ${EXEC_NAME}: $1"
}

die() {
    echo -e " !! ERROR ${EXEC_NAME}: $1" 1>&2
    exit 1
}

usage() {
    echo $"Usage: ${EXEC_NAME} [OPTION] JOB_FILE VM_IMAGE
Submit a CANFAR batch job

  JOB_FILE       HTCondor job submission file (required)
  VM_IMAGE       OpenStack VM image name (optional, can be in submit file instead)

  -h, --help                display help and exit
  -V, --version             output version information and exit
  -v, --verbose             verbose mode for debugging
"
    exit
}

VERBOSE=

# Store all options
OPTS=$(getopt \
    -o c:u:hVv \
    -l help \
    -l version \
    -l verbose \
    -- "$@")

eval set -- "${OPTS}"


while true; do
    case "$1" in
	-h | --help) usage ;;
	-V | --version) echo ${EXEC_VERSION}; exit ;;
	-v | --verbose) VERBOSE="--verbose" ;;
	--)  shift; break ;; # no more options
	*) break ;; # parameters
    esac
    shift
done

if [[ $# > 2 || $# == 0 ]];
then 
    usage
fi

JOB_FILE=$1
VM_IMAGE=$2


[[ -e ${JOB_FILE} ]] || die "HTCondor job submission file '${JOB_FILE}' does not exist"



if grep '+VMImage' ${JOB_FILE}
then
    if [ -z "$VM_IMAGE" ]
    then
        echo "VM_IMAGE cli paramenter not given. Using value from submit file."
        #set VM_IMAGE to value in file
        VM_IMAGE=$(grep "+VMImage" ${JOB_FILE} | cut -d "=" -f2 | xargs)
    fi
else
    echo '+VMimage not found in submit file. Syntax: [+VMImage=...]'

    NAME_FLAG=0
    if [ -z "$VM_IMAGE" ]
    then
        die "VM_IMAGE cli paramenter not given. A VM image name is required to proceed. Submit failed"
    else
        echo "Using VM_IMAGE value."
        NAME_FLAG=1
    fi
fi


#https://htcondor.readthedocs.io/en/latest/misc-concepts/hooks.html
cloudscheduler image transfer -tc ${TARGET_CLOUD} -in ${VM_IMAGE}


#-------------------------------------------
#Validate *.sub file...

# Extract executable
JOB_SCRIPT="$(grep -i '^[^#]*Executable\s*=' ${JOB_FILE} | cut -d= -f2 | awk '{print $1}')" \
    || die "could not search for 'executable' in ${JOB_FILE}"

[[ -z ${JOB_SCRIPT} ]] \
    && die "could not extract 'executable' from ${JOB_FILE}"
[[ -e ${JOB_SCRIPT} ]] \
    || die "executable '${JOB_SCRIPT}' extracted from ${JOB_FILE} does not exist on batch"





#-------------------------------------------


# canfar_job_validate modifies user subission file to create condor jdl submission file
jobfile="/tmp/canfar_submit_${USER}_$$.jdl"

if grep -Fxq 'Requirements' ${JOB_FILE} || grep -Fxq 'Universe' ${JOB_FILE}
then
    die  "Requirements or Universe string already exists. Not modifying submit file. Submit failed."
else
    if [[ ${NAME_FLAG} -eq 1 ]]
    then
        echo -e "Universe = vanilla\nRequirements = group_name =?= \"${GROUP_NAME}\" && Arch == \"x86_64\"\n+VMImage=\"${VM_IMAGE}\"\n$(cat ${JOB_FILE})" > ${jobfile}
    else
        echo -e "Universe = vanilla\nRequirements = group_name =?= \"${GROUP_NAME}\" && Arch == \"x86_64\"\n$(cat ${JOB_FILE})" > ${jobfile}
    fi
fi



# Submit modified jdl file to condor
if [[ -n ${VERBOSE} ]]; then
    msg "running condor_submit ${jobfile}"
    tmp_condor_out="/tmp/condor_submit_$$.jdl"
    condor_submit ${jobfile} > ${tmp_condor_out} || die "failed to submit job(s) to queue. Failed job in ${jobfile}"
    msg "successfully submitted $(awk '/submitted/ {print $1}' ${tmp_condor_out}) job(s) with file: ${jobfile}"
    rm ${tmp_condor_out}
else
    condor_submit ${jobfile} || die "failed to submit job(s) to queue. Failed job in ${jobfile}"
    #rm -f ${jobfile}
fi
