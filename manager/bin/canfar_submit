#!/bin/bash
#
# User script for submitting jobs. A wrapper for cansub,
# canfar_job_validate and condor_submit. Normally a user should
# use cansub (without the --nopost option) so that the job goes
# through the web service. This script avoids the web service and can
# submit jobs directly on the head node for testing purposes.

EXEC_NAME=$(basename $0 .${0##*.})
EXEC_VERSION=0.3.1

msg() {
    echo -e " >> ${EXEC_NAME}: $1"
}

warn() {
    echo -e " >> ${EXEC_NAME} WARNING: $1"
}

die() {
    echo -e " >> ${EXEC_NAME} ERROR: $1" 1>&2
    exit 1
}

usage() {
    echo $"Usage: ${EXEC_NAME} [OPTION] JOB_FILE VM_IMAGE VM_FLAVOR
Submit a CANFAR batch job

  JOB_FILE       HTCondor job submission file
  VM_IMAGE       OpenStack VM image used to process jobs (name or ID)
  VM_FLAVOR      OpenStack VM resource flavor used to process jobs

  -c, --cert=<path>         specify path for proxy to access VOSpace (default: ${HOME}/.ssl/cadcproxy.pem)
  -h, --help                display help and exit
  -v, --version             output version information and exit
  -V, --verbose             verbose mode for debugging

Import environment variables to be set:
  OS_AUTH_URL
  OS_TENANT_ID
  OS_TENANT_NAME
  OS_USERNAME
  OS_PASSWORD
"
    exit
}

VERBOSE=

# Store all options
OPTS=$(getopt \
    -o c:hvV \
    -l cert: \
    -l help \
    -l version \
    -l verbose \
    -- "$@")

eval set -- "${OPTS}"

JOB_USER=
CERT_USER=

while true; do
    case "$1" in
	-c | --cert) CERT_USER="--cert=${2##=}"; shift ;;
	-h | --help) usage ;;
	-v | --version) echo ${EXEC_VERSION}; exit ;;
	-V | --verbose) VERBOSE="--verbose" ;;
	--)  shift; break ;; # no more options
	*) break ;; # parameters
    esac
    shift
done

[[ $# -eq 3 ]] || usage

[[ -z ${CERT_USER} ]] && [[ ! -e ${HOME}/.ssl/cadcproxy.pem ]] && \
    warn "you are submitting jobs without a VOSPace access certificate"

JOB_FILE=$1
VM_IMAGE=$2
VM_FLAVOR=$3

[[ -e ${JOB_FILE} ]] || die "HTCondor job submission file '${JOB_FILE}' does not exist"

# Extract executable
JOB_SCRIPT="$(grep '^[^#]*Executable\s*=' ${JOB_FILE} | cut -d= -f2 | awk '{print $1}')" \
    || die "could not search for 'Executable' in ${JOB_FILE}"

[[ -z ${JOB_SCRIPT} ]] \
    && die "could not extract 'Executable' from ${JOB_FILE}"
[[ -e ${JOB_SCRIPT} ]] \
    || die "Executable '${JOB_SCRIPT}' extracted from ${JOB_FILE} does not exist on batch"

if [[ -z ${OS_AUTH_URL} ]] || [[ -z ${OS_TENANT_ID} ]] || [[ -z ${OS_TENANT_NAME} ]] || \
    [[ -z ${OS_USERNAME} ]] || [[ -z ${OS_PASSWORD} ]]; then
    rcfiles=$(ls -1 ~/canfar-*-openrc.sh)
    die "OpenStack environment variables not set\n Try sourcing either:\n${rcfiles}"
fi

# Call cansub with --nopost simply to share the image and translate image
# and flavor names to their IDs, which is what canfar_job_validate expects.
[[ -n ${VERBOSE} ]] && msg "Running cansub ${JOB_FILE} ${VM_IMAGE} ${VM_FLAVOR} --nopost"
VM_IMAGE_AND_FLAVOR_IDS=$(cansub ${JOB_FILE} ${VM_IMAGE} ${VM_FLAVOR} --nopost 2>&1) \
    || die "cansub failed with the error below\n >> cansub ${VM_IMAGE_AND_FLAVOR_IDS}"

# big string for the job
[[ -n ${VERBOSE} ]] && msg "Running canfar_job_validate ${CERT_USER} ${JOB_FILE} ${JOB_SCRIPT} ${VM_IMAGE_AND_FLAVOR_IDS}"


jobfile="/tmp/canfar-submit-${USER}-$$.job"
error=$((canfar_job_validate ${CERT_USER} ${JOB_FILE} ${JOB_SCRIPT} ${VM_IMAGE_AND_FLAVOR_IDS} > ${jobfile}) 2>&1) \
    || die "submission failed with the error below\n >> canfar_job_validate ${error}"

#JOB=$(canfar_job_validate ${CERT_USER} ${JOB_FILE} ${JOB_SCRIPT} ${VM_IMAGE_AND_FLAVOR_IDS} 2>&1) \
#    || die "submission failed with the error below\n >> canfar_job_validate ${JOB}"

[[ -n ${VERBOSE} ]] && msg "Running condor_submit ${jobfile}"
#echo "${JOB}" | condor_submit || die "failed to submit job(s) to queue. Failed job below\n${JOB}"
condor_submit ${jobfile} || die "failed to submit job(s) to queue. Failed job in ${jobfile}"
if [[ -n ${VERBOSE} ]]; then
    msg "Successfully submitted job(s). Job file not removed."
else
    rm -f ${jobfile}
fi
