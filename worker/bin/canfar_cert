#!/bin/bash
#
# Shell script to get a proxy cert really hard
#

EXEC_NAME=$(basename $0 .${0##*.})
EXEC_VERSION=0.1.2

# Default path for CANFAR user X509 proxy cert
CANFAR_CERT_DEFAULT_PATH="${HOME}/.ssl/cadcproxy.pem"

# min validation in days the cert has to be
CANFAR_CERT_MIN_VALID=5

# max validation in days the cert will be
CANFAR_CERT_MAX_VALID=15

# cadc url to check a valid cert
CADC_URL="www.cadc-ccda.hia-iha.nrc-cnrc.gc.ca"

# the canfar user for the proxy cert if needed
CANFAR_USER="${USER}"

msg() {
    echo " >> ${EXEC_NAME}: $1"
}

die() {
    echo "ERROR ${EXEC_NAME}: $1" 1>&2
    exit 1
}

usage() {
    echo $"Usage: ${EXEC_NAME} [OPTION]
Try to generate a new proxy cert with minimum validity for processing

  -c, --cert          	    specify the CANFAR cert path to inject (default: ${CANFAR_CERT_PATH})
  -u, --user          	    specify the CANFAR username to fetch the cert for (default: ${USER})
  -v, --verbose             verbose for debugging
  -h, --help                display help and exit
  -V, --version             output version information and exit

"
    exit
}

# Fetch a proxy cert valid for $1 days, by:
# 1. using an existing cert
# 2. using a .netrc file
canfar_get_cert() {
    local days=$1 cert=$2    
    if [[ -n ${cert} ]] && [[ -e ${cert} ]]; then
	[[ -n ${VERBOSE} ]] && msg "trying with old cert"
	cadc-get-cert --quiet --days-valid=${days} --cert ${cert} &> /dev/null && return 0
    fi
    if grep -q ${CADC_URL}.*${CANFAR_USER} ${HOME}/.netrc 2> /dev/null; then
	[[ -n ${VERBOSE} ]] && msg "trying netrc"
	cadc-get-cert --quiet --days-valid=${days} -n > /dev/null && return 0
    elif grep -q ${CANFAR_URL}.*${CANFAR_USER} ${HOME}/.netrc 2> /dev/null; then
	[[ -n ${VERBOSE} ]] && msg "trying getCert"	
	getCert--daysValid=${days} > /dev/null && return 0
    fi
    return 1
}

# Check a proxy cert for minimum days of validity for processing
canfar_check_cert() {
    local cert=$1
    local last_day_valid="$(openssl x509 -in ${cert} -enddate -noout | sed -e 's/notAfter=//')"
    local days_left=$(( ( $(date --date="${last_day_valid}" +%s) - $(date --date="${today}" +%s) ) / 86400 ))
    if [[ ${days_left} -lt ${CANFAR_CERT_MIN_VALID} ]]; then
	[[ -n ${VERBOSE} ]] && msg "Left with ${days_left} days"
	[[ -n ${VERBOSE} ]] && msg "Renewing certificate for ${CANFAR_CERT_MAX_VALID} days"
	canfar_get_cert ${CANFAR_CERT_MAX_VALID} ${cert}
	 #|| die "could not renew proxy cert"
    else
	[[ -n ${VERBOSE} ]] && msg "Your certificate is still valid for ${days_left} days"
	return 0
    fi
}

# Store all options
OPTS=$(getopt \
    -o c:u:hvV \
    -l cert: \
    -l user: \
    -l help \
    -l verbose \
    -l version \
    -- "$@")

eval set -- "${OPTS}"

# Process options
VERBOSE=
while true; do
    case "$1" in
	-c | --cert) CANFAR_CERT_PATH=${2##=}; shift ;;
	-u | --user) CANFAR_USER=${2##=}; shift ;;
	-h | --help) usage ;;
	-v | --verbose) VERBOSE=true ;;	
	-V | --version) echo ${EXEC_VERSION}; exit ;;
	--)  shift; break ;; # no more options
	*) break ;; # parameters
    esac
    shift
done

valid=no

if [[ -e ${CANFAR_CERT_PATH} ]]; then
    [[ -n ${VERBOSE} ]] && msg "checking ${CANFAR_CERT_PATH}"
    canfar_check_cert ${CANFAR_CERT_PATH} && valid=yes
fi

if [[ -e ${PWD}/cadcproxy.pem ]] && [[ ${valid} == no ]]; then
    [[ -n ${VERBOSE} ]] && msg "checking ${PWD}/cadcproxy.pem"    
    canfar_check_cert ${PWD}/cadcproxy.pem && valid=yes && CANFAR_CERT_PATH=${PWD}/cadcproxy.pem
fi

if [[ -e ${CANFAR_CERT_DEFAULT_PATH} ]] && [[ ${valid} == no ]]; then
    [[ -n ${VERBOSE} ]] && msg "checking ${CANFAR_CERT_DEFAULT_PATH}"
    canfar_check_cert ${CANFAR_CERT_DEFAULT_PATH} && valid=yes
else
    echo 3
    [[ -n ${VERBOSE} ]] && msg "trying to get one automatically"
    canfar_get_cert ${CANFAR_CERT_MAX_VALID} && valid=yes
fi

[[ ${valid} == no ]] && die "could not get a valid cert"

# hack to copy to default location for vos
if [[ -e ${CANFAR_CERT_PATH} ]]; then
    mkdir -p $(dirname ${CANFAR_CERT_DEFAULT_PATH})
    cp ${CANFAR_CERT_PATH} ${CANFAR_CERT_DEFAULT_PATH}
fi

